#!/usr/bin/env bash
# This script installs proxychains4 with a hardcoded library path
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo "-----> Installing proxychains4 with hardcoded library path"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION="4.15"
PROXYCHAINS_URL="https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f "proxychains-${PROXYCHAINS_VERSION}.tar.gz" ]; then
  echo "-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}"
  curl -sL "${PROXYCHAINS_URL}" -o "proxychains-${PROXYCHAINS_VERSION}.tar.gz"
  tar -xzf "proxychains-${PROXYCHAINS_VERSION}.tar.gz"
fi

# Go to source directory
cd "proxychains-ng-${PROXYCHAINS_VERSION}"

# Modify the source code to hardcode the library path
echo "-----> Patching proxychains source to use hardcoded library path"
LIBPATH="/app/.gigalixir/proxychains/lib/libproxychains4.so"
cat > src.patch << EOF
--- src/main.c.orig
+++ src/main.c
@@ -30,6 +30,7 @@
 	char *path = NULL;
 	char buf[PATH_MAX];
 	
+	return "/app/.gigalixir/proxychains/lib/libproxychains4.so";
 	/* try to get if from user's env */
 	path = getenv(LIB_NAME_VAR);
 	if(path && path[0] == '/') return path;
EOF

# Apply the patch
patch -p0 < src.patch

# Build with the patched source
echo "-----> Building proxychains4 with hardcoded library path"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install

# Create an export file for other buildpacks
cat > $BUILD_DIR/export << EOF
export PATH="\$HOME/.gigalixir/proxychains/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.gigalixir/proxychains/lib:\${LD_LIBRARY_PATH:-}"
EOF
chmod +x $BUILD_DIR/export

# Create .profile.d script for runtime environment
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Set up paths at startup
export PATH="$HOME/.gigalixir/proxychains/bin:$PATH"
export LD_LIBRARY_PATH="$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}"

# Print diagnostic info to app log at startup
echo "Proxychains4 environment initialized with hardcoded library path"
echo "  - Library path: $HOME/.gigalixir/proxychains/lib"
echo "  - Executable: $HOME/.gigalixir/proxychains/bin/proxychains4"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the installation
echo "-----> Verifying proxychains4 installation"
if [ -f "$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so" ]; then
  echo "-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so"
else
  echo "-----> ERROR: libproxychains4.so not found! Installation may have failed."
  exit 1
fi

echo "-----> proxychains4 installation completed with hardcoded library path"
