(undo-tree-save-format-version . 1)
"a7902afa5acab942af2363940fa40820c200ca62"
[nil nil nil nil (26615 58711 770037 578000) 0 nil]
([nil nil ((1 . 1971) (t . -1)) nil (26615 58711 770033 754000) 0 nil])
([nil nil ((1971 . 1972) (t 26615 58711 780501 767000)) nil (26615 58718 380402 903000) 0 nil])
([nil nil (("i" . -1971) (undo-tree-id0 . -1) 1972) nil (26615 58718 380399 435000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4

# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

echo \"-----> Installing proxychains4\"

# Create directories
mkdir -p $BUILD_DIR/.heroku/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d

# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"

# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi

# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.heroku/proxychains
make
make install

# Copy default config
cp src/proxychains.conf $BUILD_DIR/.heroku/proxychains/

# Create a proxychains4 wrapper script
cat > $BUILD_DIR/.heroku/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"
PROXYCHAINS_BIN=\"${SCRIPT_DIR}/proxychains4\"
PROXYCHAINS_CONF=\"${HOME}/.heroku/proxychains/proxychains.conf\"

if [ ! -f \"${PROXYCHAINS_CONF}\" ]; then
  # Use default config if custom config doesn't exist
  PROXYCHAINS_CONF=\"${HOME}/.heroku/proxychains/share/proxychains.conf\"
fi

exec \"${PROXYCHAINS_BIN}\" -f \"${PROXYCHAINS_CONF}\" \"$@\"
EOF

chmod +x $BUILD_DIR/.heroku/proxychains/bin/proxychains-wrapper

# Create .profile.d script to set up paths
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
export PATH=\"$HOME/.heroku/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.heroku/proxychains/lib:$LD_LIBRARY_PATH\"
EOF

chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

echo \"-----> proxychains4 installation completed\"" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 69 (face font-lock-comment-face fontified t) 69 70 (fontified t) 70 79 (face font-lock-variable-name-face fontified t) 79 81 (fontified t) 81 82 (face font-lock-variable-name-face fontified t) 82 83 (fontified t) 83 92 (face font-lock-variable-name-face fontified t) 92 94 (fontified t) 94 95 (face font-lock-variable-name-face fontified t) 95 96 (fontified t) 96 103 (face font-lock-variable-name-face fontified t) 103 105 (fontified t) 105 106 (face font-lock-variable-name-face fontified t) 106 108 (fontified t) 108 112 (face font-lock-function-name-face fontified t) 112 113 (fontified t) 113 145 (face font-lock-string-face fontified t) 145 147 (fontified t) 147 167 (face font-lock-comment-face fontified t) 167 168 (fontified t) 168 173 (face font-lock-function-name-face fontified t) 173 178 (fontified t) 178 187 (face font-lock-variable-name-face fontified t) 187 208 (fontified t) 208 213 (face font-lock-function-name-face fontified t) 213 218 (fontified t) 218 227 (face font-lock-variable-name-face fontified t) 227 240 (fontified t) 240 245 (face font-lock-function-name-face fontified t) 245 250 (fontified t) 250 259 (face font-lock-variable-name-face fontified t) 259 272 (fontified t) 272 323 (face font-lock-comment-face fontified t) 323 324 (fontified t) 324 343 (face font-lock-variable-name-face fontified t) 343 344 (fontified t) 344 350 (face font-lock-string-face fontified t) 350 351 (fontified t) 351 366 (face font-lock-variable-name-face fontified t) 366 367 (fontified t) 367 430 (face font-lock-string-face fontified t) 430 449 (face font-lock-variable-use-face fontified t) 449 458 (face font-lock-string-face fontified t) 458 460 (fontified t) 460 482 (face font-lock-comment-face fontified t) 482 483 (fontified t) 483 485 (face font-lock-function-name-face fontified t) 485 487 (fontified t) 487 496 (face font-lock-variable-name-face fontified t) 496 509 (fontified t) 509 511 (face font-lock-keyword-face fontified t) 511 519 (fontified t) 519 534 (face font-lock-string-face fontified t) 534 553 (face font-lock-variable-use-face fontified t) 553 562 (face font-lock-string-face fontified t) 562 566 (fontified t) 566 570 (face font-lock-keyword-face fontified t) 570 573 (fontified t) 573 577 (face font-lock-function-name-face fontified t) 577 578 (fontified t) 578 616 (face font-lock-string-face fontified t) 616 635 (face font-lock-variable-use-face fontified t) 635 637 (face font-lock-string-face fontified t) 637 640 (fontified t) 640 644 (face font-lock-function-name-face fontified t) 644 649 (fontified t) 649 652 (face font-lock-string-face fontified t) 652 667 (face font-lock-variable-use-face fontified t) 667 669 (face font-lock-string-face fontified t) 669 673 (fontified t) 673 688 (face font-lock-string-face fontified t) 688 707 (face font-lock-variable-use-face fontified t) 707 716 (face font-lock-string-face fontified t) 716 719 (fontified t) 719 722 (face font-lock-function-name-face fontified t) 722 728 (fontified t) 728 743 (face font-lock-string-face fontified t) 743 762 (face font-lock-variable-use-face fontified t) 762 771 (face font-lock-string-face fontified t) 771 772 (fontified t) 772 774 (face font-lock-keyword-face fontified t) 774 776 (fontified t) 776 783 (face font-lock-comment-face fontified t) 783 784 (fontified t) 784 786 (face font-lock-function-name-face fontified t) 786 787 (fontified t) 787 805 (face font-lock-string-face fontified t) 805 824 (face font-lock-variable-use-face fontified t) 824 826 (face font-lock-string-face fontified t) 826 827 (fontified t) 827 831 (face font-lock-function-name-face fontified t) 831 832 (fontified t) 832 862 (face font-lock-string-face fontified t) 862 863 (fontified t) 863 874 (face font-lock-function-name-face fontified t) 874 885 (fontified t) 885 894 (face font-lock-variable-name-face fontified t) 894 915 (fontified t) 915 919 (face font-lock-function-name-face fontified t) 919 920 (fontified t) 920 924 (face font-lock-function-name-face fontified t) 924 934 (fontified t) 934 955 (face font-lock-comment-face fontified t) 955 956 (fontified t) 956 958 (face font-lock-function-name-face fontified t) 958 981 (fontified t) 981 990 (face font-lock-variable-name-face fontified t) 990 1013 (fontified t) 1013 1051 (face font-lock-comment-face fontified t) 1051 1052 (fontified t) 1052 1055 (face font-lock-function-name-face fontified t) 1055 1059 (fontified t) 1059 1068 (face font-lock-variable-name-face fontified t) 1068 1116 (fontified t) 1116 1121 (face sh-heredoc fontified t) 1121 1122 (fontified t) 1122 1500 (face sh-heredoc fontified t) 1500 1554 (face sh-heredoc fontified t) 1554 1559 (fontified t) 1559 1564 (face font-lock-function-name-face fontified t) 1564 1569 (fontified t) 1569 1578 (face font-lock-variable-name-face fontified t) 1578 1624 (fontified t) 1624 1666 (face font-lock-comment-face fontified t) 1666 1667 (fontified t) 1667 1670 (face font-lock-function-name-face fontified t) 1670 1674 (fontified t) 1674 1683 (face font-lock-variable-name-face fontified t) 1683 1717 (fontified t) 1717 1722 (face sh-heredoc fontified t) 1722 1723 (fontified t) 1723 1865 (face sh-heredoc fontified t) 1865 1870 (fontified t) 1870 1875 (face font-lock-function-name-face fontified t) 1875 1880 (fontified t) 1880 1889 (face font-lock-variable-name-face fontified t) 1889 1921 (fontified t) 1921 1925 (face font-lock-function-name-face fontified t) 1925 1926 (fontified t) 1926 1970 (face font-lock-string-face fontified t)) . 1) (undo-tree-id2 . -1970) (t 26615 58718 380360 288000)) nil (26617 9588 729782 208000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3289 . 3290) (nil fontified nil 1 . 3290) (1 . 3290)) nil (26617 9588 729781 68000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install
# Copy default config
cp src/proxychains.conf $BUILD_DIR/.gigalixir/proxychains/
# Create a proxychains4 wrapper script
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"
PROXYCHAINS_ROOT=\"$( cd \"$SCRIPT_DIR/..\" &> /dev/null && pwd )\"
PROXYCHAINS_BIN=\"${SCRIPT_DIR}/proxychains4\"
PROXYCHAINS_CONF=\"${HOME}/.gigalixir/proxychains/proxychains.conf\"

# Export the library path directly in the wrapper
export LD_LIBRARY_PATH=\"${PROXYCHAINS_ROOT}/lib:$LD_LIBRARY_PATH\"

if [ ! -f \"${PROXYCHAINS_CONF}\" ]; then
  # Use default config if custom config doesn't exist
  PROXYCHAINS_CONF=\"${PROXYCHAINS_ROOT}/share/proxychains.conf\"
fi

# Check if the library exists
if [ ! -f \"${PROXYCHAINS_ROOT}/lib/libproxychains4.so\" ]; then
  echo \"ERROR: Could not locate libproxychains4.so in ${PROXYCHAINS_ROOT}/lib/\"
  echo \"Library paths searched: ${LD_LIBRARY_PATH}\"
  exit 1
fi

exec \"${PROXYCHAINS_BIN}\" -f \"${PROXYCHAINS_CONF}\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper
# Create .profile.d script to set up paths
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Ensure the library path is correctly set at app startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the library was installed correctly
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  echo \"-----> Checking for other .so files in $BUILD_DIR/.gigalixir/proxychains/lib:\"
  find \"$BUILD_DIR/.gigalixir/proxychains/lib\" -name \"*.so\" -type f
  exit 1
fi

# Test the wrapper script
echo \"-----> Testing proxychains-wrapper\"
export LD_LIBRARY_PATH=\"$BUILD_DIR/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
$BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper echo \"Proxychains test successful\" || echo \"Proxychains test failed\"

echo \"-----> proxychains4 installation completed\"" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 959 (fontified t) 959 980 (face font-lock-comment-face fontified t) 980 981 (fontified t) 981 983 (face font-lock-function-name-face fontified t) 983 1006 (fontified t) 1006 1015 (face font-lock-variable-name-face fontified t) 1015 1040 (fontified t) 1040 1078 (face font-lock-comment-face fontified t) 1078 1079 (fontified t) 1079 1082 (face font-lock-function-name-face fontified t) 1082 1086 (fontified t) 1086 1095 (face font-lock-variable-name-face fontified t) 1095 1146 (fontified t) 1146 1151 (face sh-heredoc fontified t) 1151 1152 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1152 1500 (face sh-heredoc fontified t) 1500 1541 (face sh-heredoc fontified t) 1541 1998 (face sh-heredoc fontified t) 1998 2001 (fontified t) 2001 2002 (syntax-table (15) fontified t) 2002 2007 (face font-lock-function-name-face fontified t) 2007 2012 (fontified t) 2012 2021 (face font-lock-variable-name-face fontified t) 2021 2069 (fontified t) 2069 2111 (face font-lock-comment-face fontified t) 2111 2112 (fontified t) 2112 2115 (face font-lock-function-name-face fontified t) 2115 2119 (fontified t) 2119 2128 (face font-lock-variable-name-face fontified t) 2128 2162 (fontified t) 2162 2167 (face sh-heredoc fontified t) 2167 2168 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 2168 2378 (face sh-heredoc fontified t) 2378 2381 (fontified t) 2381 2382 (syntax-table (15) fontified t) 2382 2387 (face font-lock-function-name-face fontified t) 2387 2392 (fontified t) 2392 2401 (face font-lock-variable-name-face fontified t) 2401 2433 (fontified t) 2433 2477 (face font-lock-comment-face fontified t) 2477 2478 (fontified t) 2478 2482 (face font-lock-function-name-face fontified t) 2482 2483 (fontified t) 2483 2527 (face font-lock-string-face fontified t) 2527 2528 (fontified t) 2528 2530 (face font-lock-keyword-face fontified t) 2530 2536 (fontified t) 2536 2594 (face font-lock-string-face fontified t) 2594 2598 (fontified t) 2598 2602 (face font-lock-keyword-face fontified t) 2602 2605 (fontified t) 2605 2609 (face font-lock-function-name-face fontified t) 2609 2610 (fontified t) 2610 2703 (face font-lock-string-face fontified t) 2703 2704 (fontified t) 2704 2708 (face font-lock-keyword-face fontified t) 2708 2711 (fontified t) 2711 2715 (face font-lock-function-name-face fontified t) 2715 2716 (fontified t) 2716 2791 (face font-lock-string-face fontified t) 2791 2794 (fontified t) 2794 2798 (face font-lock-function-name-face fontified t) 2798 2799 (fontified t) 2799 2878 (face font-lock-string-face fontified t) 2878 2881 (fontified t) 2881 2885 (face font-lock-function-name-face fontified t) 2885 2886 (fontified t) 2886 2925 (face font-lock-string-face fontified t) 2925 2932 (fontified t) 2932 2938 (face font-lock-string-face fontified t) 2938 2949 (fontified t) 2949 2953 (face font-lock-keyword-face fontified t) 2953 2956 (fontified t) 2956 2958 (face font-lock-keyword-face fontified t) 2958 2960 (fontified t) 2960 2985 (face font-lock-comment-face fontified t) 2985 2986 (fontified t) 2986 2990 (face font-lock-function-name-face fontified t) 2990 2991 (fontified t) 2991 3027 (face font-lock-string-face fontified t) 3027 3028 (fontified t) 3028 3034 (face font-lock-keyword-face fontified t) 3034 3035 (fontified t) 3035 3041 (face font-lock-variable-name-face fontified t) 3041 3050 (face font-lock-variable-name-face fontified t) 3050 3051 (fontified t) 3051 3092 (face font-lock-string-face fontified t) 3092 3107 (face font-lock-variable-use-face fontified t) 3107 3111 (face font-lock-string-face fontified t) 3111 3112 (fontified t) 3112 3113 (fontified t) 3113 3122 (face font-lock-variable-name-face fontified t) 3122 3175 (fontified t) 3175 3204 (face font-lock-string-face fontified t) 3204 3208 (fontified t) 3208 3212 (face font-lock-function-name-face fontified t) 3212 3213 (fontified t) 3213 3238 (face font-lock-string-face fontified t) 3238 3240 (fontified t) 3240 3244 (face font-lock-function-name-face fontified t) 3244 3245 (fontified t) 3245 3288 (face font-lock-string-face fontified t) 3288 3289 (face font-lock-string-face rear-nonsticky t fontified t)) . 1) (undo-tree-id0 . -3289) (undo-tree-id1 . -3289)) nil (26617 9588 729780 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3289 . 3290) (nil fontified nil 1 . 3290) (1 . 3290)) nil (26617 9588 729764 931000) 0 nil])
([nil nil ((3290 . 3291)) nil (26617 9588 729760 553000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install
# Copy default config
cp src/proxychains.conf $BUILD_DIR/.gigalixir/proxychains/
# Create a proxychains4 wrapper script
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"
PROXYCHAINS_ROOT=\"$( cd \"$SCRIPT_DIR/..\" &> /dev/null && pwd )\"
PROXYCHAINS_BIN=\"${SCRIPT_DIR}/proxychains4\"
PROXYCHAINS_CONF=\"${HOME}/.gigalixir/proxychains/proxychains.conf\"

# Export the library path directly in the wrapper
export LD_LIBRARY_PATH=\"${PROXYCHAINS_ROOT}/lib:$LD_LIBRARY_PATH\"

if [ ! -f \"${PROXYCHAINS_CONF}\" ]; then
  # Use default config if custom config doesn't exist
  PROXYCHAINS_CONF=\"${PROXYCHAINS_ROOT}/share/proxychains.conf\"
fi

# Check if the library exists
if [ ! -f \"${PROXYCHAINS_ROOT}/lib/libproxychains4.so\" ]; then
  echo \"ERROR: Could not locate libproxychains4.so in ${PROXYCHAINS_ROOT}/lib/\"
  echo \"Library paths searched: ${LD_LIBRARY_PATH}\"
  exit 1
fi

exec \"${PROXYCHAINS_BIN}\" -f \"${PROXYCHAINS_CONF}\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper
# Create .profile.d script to set up paths
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Ensure the library path is correctly set at app startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the library was installed correctly
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  echo \"-----> Checking for other .so files in $BUILD_DIR/.gigalixir/proxychains/lib:\"
  find \"$BUILD_DIR/.gigalixir/proxychains/lib\" -name \"*.so\" -type f
  exit 1
fi

# Test the wrapper script
echo \"-----> Testing proxychains-wrapper\"
export LD_LIBRARY_PATH=\"$BUILD_DIR/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
$BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper echo \"Proxychains test successful\" || echo \"Proxychains test failed\"

echo \"-----> proxychains4 installation completed\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 959 (fontified t) 959 980 (face font-lock-comment-face fontified t) 980 981 (fontified t) 981 983 (face font-lock-function-name-face fontified t) 983 1006 (fontified t) 1006 1015 (face font-lock-variable-name-face fontified t) 1015 1040 (fontified t) 1040 1078 (face font-lock-comment-face fontified t) 1078 1079 (fontified t) 1079 1082 (face font-lock-function-name-face fontified t) 1082 1086 (fontified t) 1086 1095 (face font-lock-variable-name-face fontified t) 1095 1146 (fontified t) 1146 1151 (face sh-heredoc fontified t) 1151 1152 (fontified t) 1152 1500 (face sh-heredoc fontified t) 1500 1541 (face sh-heredoc fontified t) 1541 1998 (face sh-heredoc fontified t) 1998 2002 (fontified t) 2002 2007 (face font-lock-function-name-face fontified t) 2007 2012 (fontified t) 2012 2021 (face font-lock-variable-name-face fontified t) 2021 2069 (fontified t) 2069 2111 (face font-lock-comment-face fontified t) 2111 2112 (fontified t) 2112 2115 (face font-lock-function-name-face fontified t) 2115 2119 (fontified t) 2119 2128 (face font-lock-variable-name-face fontified t) 2128 2162 (fontified t) 2162 2167 (face sh-heredoc fontified t) 2167 2168 (fontified t) 2168 2378 (face sh-heredoc fontified t) 2378 2382 (fontified t) 2382 2387 (face font-lock-function-name-face fontified t) 2387 2392 (fontified t) 2392 2401 (face font-lock-variable-name-face fontified t) 2401 2433 (fontified t) 2433 2477 (face font-lock-comment-face fontified t) 2477 2478 (fontified t) 2478 2482 (face font-lock-function-name-face fontified t) 2482 2483 (fontified t) 2483 2527 (face font-lock-string-face fontified t) 2527 2528 (fontified t) 2528 2530 (face font-lock-keyword-face fontified t) 2530 2536 (fontified t) 2536 2594 (face font-lock-string-face fontified t) 2594 2598 (fontified t) 2598 2602 (face font-lock-keyword-face fontified t) 2602 2605 (fontified t) 2605 2609 (face font-lock-function-name-face fontified t) 2609 2610 (fontified t) 2610 2703 (face font-lock-string-face fontified t) 2703 2704 (fontified t) 2704 2708 (face font-lock-keyword-face fontified t) 2708 2711 (fontified t) 2711 2715 (face font-lock-function-name-face fontified t) 2715 2716 (fontified t) 2716 2791 (face font-lock-string-face fontified t) 2791 2794 (fontified t) 2794 2798 (face font-lock-function-name-face fontified t) 2798 2799 (fontified t) 2799 2878 (face font-lock-string-face fontified t) 2878 2881 (fontified t) 2881 2885 (face font-lock-function-name-face fontified t) 2885 2886 (fontified t) 2886 2925 (face font-lock-string-face fontified t) 2925 2932 (fontified t) 2932 2938 (face font-lock-string-face fontified t) 2938 2949 (fontified t) 2949 2953 (face font-lock-keyword-face fontified t) 2953 2956 (fontified t) 2956 2958 (face font-lock-keyword-face fontified t) 2958 2960 (fontified t) 2960 2985 (face font-lock-comment-face fontified t) 2985 2986 (fontified t) 2986 2990 (face font-lock-function-name-face fontified t) 2990 2991 (fontified t) 2991 3027 (face font-lock-string-face fontified t) 3027 3028 (fontified t) 3028 3034 (face font-lock-keyword-face fontified t) 3034 3035 (fontified t) 3035 3041 (face font-lock-variable-name-face fontified t) 3041 3050 (face font-lock-variable-name-face fontified t) 3050 3051 (fontified t) 3051 3092 (face font-lock-string-face fontified t) 3092 3107 (face font-lock-variable-use-face fontified t) 3107 3111 (face font-lock-string-face fontified t) 3111 3112 (fontified t) 3112 3290 (fontified nil)) . 1) (undo-tree-id0 . -3290) (t 26617 9588 729775 151000)) nil (26617 10178 552503 116000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3516 . 3517) (nil fontified nil 1 . 3517) (1 . 3517)) nil (26617 10178 552487 616000) 0 nil])
([nil nil ((3517 . 3518) 1) nil (26617 10178 552483 857000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install
# Copy default config
cp src/proxychains.conf $BUILD_DIR/.gigalixir/proxychains/

# Create an export file for other buildpacks to use
cat > $BUILD_DIR/export << EOF
export PATH=\"\\$HOME/.gigalixir/proxychains/bin:\\$PATH\"
export LD_LIBRARY_PATH=\"\\$HOME/.gigalixir/proxychains/lib:\\${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/export

# Create a proxychains4 wrapper script
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"
PROXYCHAINS_ROOT=\"$( cd \"$SCRIPT_DIR/..\" &> /dev/null && pwd )\"
PROXYCHAINS_BIN=\"${SCRIPT_DIR}/proxychains4\"
PROXYCHAINS_CONF=\"${HOME}/.gigalixir/proxychains/proxychains.conf\"

# Export the library path directly in the wrapper
export LD_LIBRARY_PATH=\"${PROXYCHAINS_ROOT}/lib:$LD_LIBRARY_PATH\"

if [ ! -f \"${PROXYCHAINS_CONF}\" ]; then
  # Use default config if custom config doesn't exist
  PROXYCHAINS_CONF=\"${PROXYCHAINS_ROOT}/share/proxychains.conf\"
fi

# Check if the library exists
if [ ! -f \"${PROXYCHAINS_ROOT}/lib/libproxychains4.so\" ]; then
  echo \"ERROR: Could not locate libproxychains4.so in ${PROXYCHAINS_ROOT}/lib/\"
  echo \"Library paths searched: ${LD_LIBRARY_PATH}\"
  exit 1
fi

exec \"${PROXYCHAINS_BIN}\" -f \"${PROXYCHAINS_CONF}\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper

# Create .profile.d script to set up paths
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Ensure the library path is correctly set at app startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Create a runtime configuration script
cat > $BUILD_DIR/.gigalixir/proxychains/set_env.sh << 'EOF'
#!/usr/bin/env bash
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:$LD_LIBRARY_PATH\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/set_env.sh

# Verify the library was installed correctly
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  echo \"-----> Checking for other .so files in $BUILD_DIR/.gigalixir/proxychains/lib:\"
  find \"$BUILD_DIR/.gigalixir/proxychains/lib\" -name \"*.so\" -type f
  exit 1
fi

echo \"-----> proxychains4 installation completed\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 959 (fontified t) 959 980 (face font-lock-comment-face fontified t) 980 981 (fontified t) 981 983 (face font-lock-function-name-face fontified t) 983 1006 (fontified t) 1006 1015 (face font-lock-variable-name-face fontified t) 1015 1041 (fontified t) 1041 1092 (face font-lock-comment-face fontified t) 1092 1093 (fontified t) 1093 1096 (face font-lock-function-name-face fontified t) 1096 1100 (fontified t) 1100 1109 (face font-lock-variable-name-face fontified t) 1109 1120 (fontified t) 1120 1123 (face sh-heredoc fontified t) 1123 1124 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1124 1260 (face sh-heredoc fontified t) 1260 1263 (fontified t) 1263 1264 (syntax-table (15) fontified t) 1264 1269 (face font-lock-function-name-face fontified t) 1269 1274 (fontified t) 1274 1283 (face font-lock-variable-name-face fontified t) 1283 1292 (fontified t) 1292 1330 (face font-lock-comment-face fontified t) 1330 1331 (fontified t) 1331 1334 (face font-lock-function-name-face fontified t) 1334 1338 (fontified t) 1338 1347 (face font-lock-variable-name-face fontified t) 1347 1398 (fontified t) 1398 1403 (face sh-heredoc fontified t) 1403 1404 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1404 1500 (face sh-heredoc fontified t) 1500 2250 (face sh-heredoc fontified t) 2250 2253 (fontified t) 2253 2254 (syntax-table (15) fontified t) 2254 2259 (face font-lock-function-name-face fontified t) 2259 2264 (fontified t) 2264 2273 (face font-lock-variable-name-face fontified t) 2273 2322 (fontified t) 2322 2364 (face font-lock-comment-face fontified t) 2364 2365 (fontified t) 2365 2368 (face font-lock-function-name-face fontified t) 2368 2372 (fontified t) 2372 2381 (face font-lock-variable-name-face fontified t) 2381 2415 (fontified t) 2415 2420 (face sh-heredoc fontified t) 2420 2421 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 2421 2631 (face sh-heredoc fontified t) 2631 2634 (fontified t) 2634 2635 (syntax-table (15) fontified t) 2635 2640 (face font-lock-function-name-face fontified t) 2640 2645 (fontified t) 2645 2654 (face font-lock-variable-name-face fontified t) 2654 2686 (fontified t) 2686 2725 (face font-lock-comment-face fontified t) 2725 2726 (fontified t) 2726 2729 (face font-lock-function-name-face fontified t) 2729 2733 (fontified t) 2733 2742 (face font-lock-variable-name-face fontified t) 2742 2780 (fontified t) 2780 2785 (face sh-heredoc fontified t) 2785 2786 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 2786 2881 (face sh-heredoc fontified t) 2881 2884 (fontified t) 2884 2885 (syntax-table (15) fontified t) 2885 2890 (face font-lock-function-name-face fontified t) 2890 2895 (fontified t) 2895 2904 (face font-lock-variable-name-face fontified t) 2904 2940 (fontified t) 2940 2984 (face font-lock-comment-face fontified t) 2984 2985 (fontified t) 2985 2989 (face font-lock-function-name-face fontified t) 2989 2990 (fontified t) 2990 3000 (face font-lock-string-face fontified t) 3000 3034 (face font-lock-string-face fontified t) 3034 3035 (fontified t) 3035 3037 (face font-lock-keyword-face fontified t) 3037 3043 (fontified t) 3043 3101 (face font-lock-string-face fontified t) 3101 3105 (fontified t) 3105 3109 (face font-lock-keyword-face fontified t) 3109 3112 (fontified t) 3112 3116 (face font-lock-function-name-face fontified t) 3116 3117 (fontified t) 3117 3210 (face font-lock-string-face fontified t) 3210 3211 (fontified t) 3211 3215 (face font-lock-keyword-face fontified t) 3215 3218 (fontified t) 3218 3222 (face font-lock-function-name-face fontified t) 3222 3223 (fontified t) 3223 3298 (face font-lock-string-face fontified t) 3298 3301 (fontified t) 3301 3305 (face font-lock-function-name-face fontified t) 3305 3306 (fontified t) 3306 3385 (face font-lock-string-face fontified t) 3385 3388 (fontified t) 3388 3392 (face font-lock-function-name-face fontified t) 3392 3393 (fontified t) 3393 3432 (face font-lock-string-face fontified t) 3432 3439 (fontified t) 3439 3445 (face font-lock-string-face fontified t) 3445 3456 (fontified t) 3456 3460 (face font-lock-keyword-face fontified t) 3460 3463 (fontified t) 3463 3465 (face font-lock-keyword-face fontified t) 3465 3467 (fontified t) 3467 3471 (face font-lock-function-name-face) 3472 3515 (face font-lock-string-face) 3515 3516 (face font-lock-string-face rear-nonsticky t)) . 1) (undo-tree-id1 . -3517) (t 26617 10178 551686 652000)) nil (26617 10253 616083 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3234 . 3235) (nil fontified nil 1 . 3235) (1 . 3235)) nil (26617 10253 616071 571000) 0 nil])
([nil nil ((3235 . 3236)) nil (26617 10253 616066 571000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install
# Copy default config
cp src/proxychains.conf $BUILD_DIR/.gigalixir/proxychains/

# Create an export file for other buildpacks to use
cat > $BUILD_DIR/export << EOF
export PATH=\"\\$HOME/.gigalixir/proxychains/bin:\\$PATH\"
export LD_LIBRARY_PATH=\"\\$HOME/.gigalixir/proxychains/lib:\\${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/export

# Create a proxychains4 wrapper script that doesn't need sourcing
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
# Get directory of this script
SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"
PROXYCHAINS_ROOT=\"$( cd \"$SCRIPT_DIR/..\" &> /dev/null && pwd )\"
PROXYCHAINS_BIN=\"${SCRIPT_DIR}/proxychains4\"
PROXYCHAINS_CONF=\"${HOME}/.gigalixir/proxychains/proxychains.conf\"

# Set the LD_LIBRARY_PATH directly in this script
export LD_LIBRARY_PATH=\"${PROXYCHAINS_ROOT}/lib:${LD_LIBRARY_PATH:-}\"

# Check if the library exists at runtime
if [ ! -f \"${PROXYCHAINS_ROOT}/lib/libproxychains4.so\" ]; then
  echo \"ERROR: Could not locate libproxychains4.so in ${PROXYCHAINS_ROOT}/lib/\"
  echo \"Library paths searched: ${LD_LIBRARY_PATH}\"
  exit 1
fi

# Execute proxychains with the provided arguments
exec \"${PROXYCHAINS_BIN}\" -f \"${PROXYCHAINS_CONF}\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper

# Create .profile.d script to set up paths at startup
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Ensure the library path is correctly set at app startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the library was installed correctly
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  echo \"-----> Checking for other .so files in $BUILD_DIR/.gigalixir/proxychains/lib:\"
  find \"$BUILD_DIR/.gigalixir/proxychains/lib\" -name \"*.so\" -type f
  exit 1
fi

echo \"-----> proxychains4 installation completed\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 959 (fontified t) 959 980 (face font-lock-comment-face fontified t) 980 981 (fontified t) 981 983 (face font-lock-function-name-face fontified t) 983 1006 (fontified t) 1006 1015 (face font-lock-variable-name-face fontified t) 1015 1041 (fontified t) 1041 1092 (face font-lock-comment-face fontified t) 1092 1093 (fontified t) 1093 1096 (face font-lock-function-name-face fontified t) 1096 1100 (fontified t) 1100 1109 (face font-lock-variable-name-face fontified t) 1109 1120 (fontified t) 1120 1123 (face sh-heredoc fontified t) 1123 1124 (fontified t) 1124 1260 (face sh-heredoc fontified t) 1260 1264 (fontified t) 1264 1269 (face font-lock-function-name-face fontified t) 1269 1274 (fontified t) 1274 1283 (face font-lock-variable-name-face fontified t) 1283 1292 (fontified t) 1292 1357 (face font-lock-comment-face fontified t) 1357 1358 (fontified t) 1358 1361 (face font-lock-function-name-face fontified t) 1361 1365 (fontified t) 1365 1374 (face font-lock-variable-name-face fontified t) 1374 1425 (fontified t) 1425 1430 (face sh-heredoc fontified t) 1430 1431 (fontified t) 1431 1500 (face sh-heredoc fontified t) 1500 1558 (face sh-heredoc fontified t) 1558 3235 (fontified nil)) . 1) (undo-tree-id0 . -3235) (t 26617 10253 616156 79000)) nil (26617 10751 408864 996000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4972 . 4973) (nil fontified nil 1 . 4973) (1 . 4973)) nil (26617 10751 408849 652000) 0 nil])
([nil nil ((4973 . 4974)) nil (26617 10751 408843 735000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
mkdir -p $BUILD_DIR/.gigalixir/proxychains/etc
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install
# Copy default config
cp src/proxychains.conf $BUILD_DIR/.gigalixir/proxychains/

# Create a ld.so.conf file
echo \"$BUILD_DIR/.gigalixir/proxychains/lib\" > $BUILD_DIR/.gigalixir/proxychains/etc/ld.so.conf
echo \"/app/.gigalixir/proxychains/lib\" >> $BUILD_DIR/.gigalixir/proxychains/etc/ld.so.conf

# Create an export file for other buildpacks to use
cat > $BUILD_DIR/export << EOF
export PATH=\"\\$HOME/.gigalixir/proxychains/bin:\\$PATH\"
export LD_LIBRARY_PATH=\"\\$HOME/.gigalixir/proxychains/lib:\\${LD_LIBRARY_PATH:-}\"
export LD_PRELOAD=\"\\$HOME/.gigalixir/proxychains/lib/libproxychains4.so:\\${LD_PRELOAD:-}\"
EOF
chmod +x $BUILD_DIR/export

# Create a hardcoded wrapper that uses absolute paths
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
# Print debug info about the environment
echo \"DEBUG: Current directory: $(pwd)\"
echo \"DEBUG: HOME: $HOME\"
echo \"DEBUG: LD_LIBRARY_PATH: $LD_LIBRARY_PATH\"

# Hard-coded paths for Gigalixir environment
PROXYCHAINS_LIB=\"/app/.gigalixir/proxychains/lib\"
PROXYCHAINS_BIN=\"/app/.gigalixir/proxychains/bin/proxychains4\"
PROXYCHAINS_CONF=\"/app/.gigalixir/proxychains/proxychains.conf\"

# Set environment variables directly
export LD_LIBRARY_PATH=\"${PROXYCHAINS_LIB}:${LD_LIBRARY_PATH:-}\"
export LD_PRELOAD=\"${PROXYCHAINS_LIB}/libproxychains4.so:${LD_PRELOAD:-}\"

# Debug output for library
echo \"DEBUG: Looking for libproxychains4.so in: ${PROXYCHAINS_LIB}\"
if [ -f \"${PROXYCHAINS_LIB}/libproxychains4.so\" ]; then
  echo \"DEBUG: libproxychains4.so found!\"
  ls -la ${PROXYCHAINS_LIB}/libproxychains4.so
else
  echo \"DEBUG: libproxychains4.so NOT found!\"
  ls -la ${PROXYCHAINS_LIB} || echo \"Cannot list directory\"
fi

# Execute proxychains with the provided arguments
echo \"DEBUG: Running: ${PROXYCHAINS_BIN} -f ${PROXYCHAINS_CONF} $@\"
exec \"${PROXYCHAINS_BIN}\" -f \"${PROXYCHAINS_CONF}\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper

# Create another wrapper that uses ldconfig
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-ldconfig << 'EOF'
#!/usr/bin/env bash

# Create temporary ldconfig configuration
mkdir -p /tmp/proxychains-ldconfig
echo \"/app/.gigalixir/proxychains/lib\" > /tmp/proxychains-ldconfig/proxychains.conf

# Run ldconfig to update cache (if we have permission)
ldconfig -f /tmp/proxychains-ldconfig/proxychains.conf 2>/dev/null || true

# Set environment variables as a fallback
export LD_LIBRARY_PATH=\"/app/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"

# Run proxychains
/app/.gigalixir/proxychains/bin/proxychains4 -f /app/.gigalixir/proxychains/proxychains.conf \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-ldconfig

# Create .profile.d script to set up paths at startup
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Ensure the library path is correctly set at app startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
export LD_PRELOAD=\"$HOME/.gigalixir/proxychains/lib/libproxychains4.so:${LD_PRELOAD:-}\"

# Try to update ldconfig if we have permission
mkdir -p /tmp/proxychains-ldconfig
echo \"$HOME/.gigalixir/proxychains/lib\" > /tmp/proxychains-ldconfig/proxychains.conf
ldconfig -f /tmp/proxychains-ldconfig/proxychains.conf 2>/dev/null || true
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the library was installed correctly
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  echo \"-----> Checking for other .so files in $BUILD_DIR/.gigalixir/proxychains/lib:\"
  find \"$BUILD_DIR/.gigalixir/proxychains/lib\" -name \"*.so\" -type f
  exit 1
fi

echo \"-----> proxychains4 installation completed\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 302 (face font-lock-function-name-face fontified t) 302 307 (fontified t) 307 316 (face font-lock-variable-name-face fontified t) 316 344 (fontified t) 344 395 (face font-lock-comment-face fontified t) 395 396 (fontified t) 396 415 (face font-lock-variable-name-face fontified t) 415 416 (fontified t) 416 422 (face font-lock-string-face fontified t) 422 423 (fontified t) 423 438 (face font-lock-variable-name-face fontified t) 438 439 (fontified t) 439 502 (face font-lock-string-face fontified t) 502 521 (face font-lock-variable-use-face fontified t) 521 530 (face font-lock-string-face fontified t) 530 531 (fontified t) 531 553 (face font-lock-comment-face fontified t) 553 554 (fontified t) 554 556 (face font-lock-function-name-face fontified t) 556 558 (fontified t) 558 567 (face font-lock-variable-name-face fontified t) 567 580 (fontified t) 580 582 (face font-lock-keyword-face fontified t) 582 590 (fontified t) 590 605 (face font-lock-string-face fontified t) 605 624 (face font-lock-variable-use-face fontified t) 624 633 (face font-lock-string-face fontified t) 633 637 (fontified t) 637 641 (face font-lock-keyword-face fontified t) 641 644 (fontified t) 644 648 (face font-lock-function-name-face fontified t) 648 649 (fontified t) 649 687 (face font-lock-string-face fontified t) 687 706 (face font-lock-variable-use-face fontified t) 706 708 (face font-lock-string-face fontified t) 708 711 (fontified t) 711 715 (face font-lock-function-name-face fontified t) 715 720 (fontified t) 720 723 (face font-lock-string-face fontified t) 723 738 (face font-lock-variable-use-face fontified t) 738 740 (face font-lock-string-face fontified t) 740 744 (fontified t) 744 759 (face font-lock-string-face fontified t) 759 778 (face font-lock-variable-use-face fontified t) 778 787 (face font-lock-string-face fontified t) 787 790 (fontified t) 790 793 (face font-lock-function-name-face fontified t) 793 799 (fontified t) 799 814 (face font-lock-string-face fontified t) 814 833 (face font-lock-variable-use-face fontified t) 833 842 (face font-lock-string-face fontified t) 842 843 (fontified t) 843 845 (face font-lock-keyword-face fontified t) 845 846 (fontified t) 846 853 (face font-lock-comment-face fontified t) 853 854 (fontified t) 854 856 (face font-lock-function-name-face fontified t) 856 857 (fontified t) 857 875 (face font-lock-string-face fontified t) 875 894 (face font-lock-variable-use-face fontified t) 894 896 (face font-lock-string-face fontified t) 896 897 (fontified t) 897 901 (face font-lock-function-name-face fontified t) 901 902 (fontified t) 902 932 (face font-lock-string-face fontified t) 932 933 (fontified t) 933 944 (face font-lock-function-name-face fontified t) 944 955 (fontified t) 955 964 (face font-lock-variable-name-face fontified t) 964 988 (fontified t) 988 992 (face font-lock-function-name-face fontified t) 992 993 (fontified t) 993 997 (face font-lock-function-name-face fontified t) 997 1006 (fontified t) 1006 1027 (face font-lock-comment-face fontified t) 1027 1028 (fontified t) 1028 1030 (face font-lock-function-name-face fontified t) 1030 1053 (fontified t) 1053 1062 (face font-lock-variable-name-face fontified t) 1062 1088 (fontified t) 1088 1114 (face font-lock-comment-face fontified t) 1114 1115 (fontified t) 1115 1119 (face font-lock-function-name-face fontified t) 1119 1120 (fontified t) 1120 1159 (face font-lock-string-face fontified t) 1159 1163 (fontified t) 1163 1172 (face font-lock-variable-name-face fontified t) 1172 1211 (fontified t) 1211 1215 (face font-lock-function-name-face fontified t) 1215 1216 (fontified t) 1216 1249 (face font-lock-string-face fontified t) 1249 1254 (fontified t) 1254 1263 (face font-lock-variable-name-face fontified t) 1263 1303 (fontified t) 1303 1354 (face font-lock-comment-face fontified t) 1354 1355 (fontified t) 1355 1358 (face font-lock-function-name-face fontified t) 1358 1362 (fontified t) 1362 1371 (face font-lock-variable-name-face fontified t) 1371 1382 (fontified t) 1382 1385 (face sh-heredoc fontified t) 1385 1386 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1386 1500 (face sh-heredoc fontified t) 1500 1522 (face sh-heredoc fontified t) 1615 1616 (syntax-table (15)) 1770 1771 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 2879 2880 (syntax-table (15)) 3065 3066 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 3620 3621 (syntax-table (15)) 3799 3800 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 4181 4266 (face sh-heredoc fontified t) 4266 4341 (face sh-heredoc fontified t) 4341 4344 (fontified t) 4344 4345 (fontified t syntax-table (15)) 4345 4350 (face font-lock-function-name-face fontified t) 4350 4355 (fontified t) 4355 4364 (face font-lock-variable-name-face fontified t) 4364 4396 (fontified t) 4396 4440 (face font-lock-comment-face fontified t) 4440 4441 (fontified t) 4441 4445 (face font-lock-function-name-face fontified t) 4445 4446 (fontified t) 4446 4490 (face font-lock-string-face fontified t) 4490 4491 (fontified t) 4491 4493 (face font-lock-keyword-face fontified t) 4493 4499 (fontified t) 4499 4557 (face font-lock-string-face fontified t) 4557 4561 (fontified t) 4561 4565 (face font-lock-keyword-face fontified t) 4565 4568 (fontified t) 4568 4572 (face font-lock-function-name-face fontified t) 4572 4573 (fontified t) 4573 4666 (face font-lock-string-face fontified t) 4666 4667 (fontified t) 4667 4671 (face font-lock-keyword-face fontified t) 4671 4674 (fontified t) 4674 4678 (face font-lock-function-name-face fontified t) 4678 4679 (fontified t) 4679 4754 (face font-lock-string-face fontified t) 4754 4757 (fontified t) 4757 4761 (face font-lock-function-name-face fontified t) 4761 4762 (fontified t) 4762 4841 (face font-lock-string-face fontified t) 4841 4844 (fontified t) 4844 4848 (face font-lock-function-name-face fontified t) 4848 4849 (fontified t) 4849 4888 (face font-lock-string-face fontified t) 4888 4895 (fontified t) 4895 4901 (face font-lock-string-face fontified t) 4901 4912 (fontified t) 4912 4916 (face font-lock-keyword-face fontified t) 4916 4919 (fontified t) 4919 4921 (face font-lock-keyword-face fontified t) 4921 4923 (fontified t) 4923 4927 (face font-lock-function-name-face fontified t) 4927 4928 (fontified t) 4928 4971 (face font-lock-string-face fontified t) 4971 4972 (face font-lock-string-face fontified t rear-nonsticky t) 4972 4973 (fontified t)) . 1) (undo-tree-id1 . -4973) (undo-tree-id2 . -4972) (t 26617 10751 409006 16000)) nil (26617 11799 84728 116000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3875 . 3876) (nil fontified nil 1 . 3876) (1 . 3876)) nil (26617 11799 84717 474000) 0 nil])
([nil nil ((3876 . 3877)) nil (26617 11799 84711 492000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install

# Create a default proxychains.conf
cat > $BUILD_DIR/.gigalixir/proxychains/proxychains.conf << 'EOF'
# This is just a placeholder config file - your app should provide its own
strict_chain
proxy_dns
# Some reasonable defaults so proxychains doesn't fail without a config
[ProxyList]
socks5 127.0.0.1 9050
EOF

# Create an export file for other buildpacks
cat > $BUILD_DIR/export << EOF
export PATH=\"\\$HOME/.gigalixir/proxychains/bin:\\$PATH\"
export LD_LIBRARY_PATH=\"\\$HOME/.gigalixir/proxychains/lib:\\${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/export

# Create a proxychains4 wrapper script
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
# Determine config file location
if [ -n \"$1\" ] && [ \"$1\" = \"-f\" ] && [ -n \"$2\" ]; then
  # User specified a config file
  CONFIG_FILE=\"$2\"
  shift 2
else
  # Look for config in common locations
  if [ -f \"./proxychains.conf\" ]; then
    CONFIG_FILE=\"./proxychains.conf\"
  elif [ -f \"$HOME/proxychains.conf\" ]; then
    CONFIG_FILE=\"$HOME/proxychains.conf\"
  elif [ -f \"$HOME/.proxychains/proxychains.conf\" ]; then
    CONFIG_FILE=\"$HOME/.proxychains/proxychains.conf\"
  elif [ -f \"$HOME/.gigalixir/proxychains/proxychains.conf\" ]; then
    CONFIG_FILE=\"$HOME/.gigalixir/proxychains/proxychains.conf\"
  else
    echo \"ERROR: Could not find proxychains.conf in any standard location\"
    echo \"Please specify config with -f /path/to/proxychains.conf\"
    exit 1
  fi
fi

# Run proxychains with proper library path
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
exec \"$HOME/.gigalixir/proxychains/bin/proxychains4\" -f \"$CONFIG_FILE\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper

# Create .profile.d script for runtime environment
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Set up paths at startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"

# Print diagnostic info to app log at startup
echo \"Proxychains4 environment initialized\"
echo \"  - Library path: $HOME/.gigalixir/proxychains/lib\"
echo \"  - Executable: $HOME/.gigalixir/proxychains/bin/proxychains4\"
echo \"  - Default config: $HOME/.gigalixir/proxychains/proxychains.conf\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the installation
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  echo \"-----> Checking for other .so files in $BUILD_DIR/.gigalixir/proxychains/lib:\"
  find \"$BUILD_DIR/.gigalixir/proxychains/lib\" -name \"*.so\" -type f
  exit 1
fi

echo \"-----> proxychains4 installation completed\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 960 (fontified t) 960 995 (face font-lock-comment-face fontified t) 995 996 (fontified t) 996 999 (face font-lock-function-name-face fontified t) 999 1003 (fontified t) 1003 1012 (face font-lock-variable-name-face fontified t) 1012 1056 (fontified t) 1056 1061 (face sh-heredoc fontified t) 1061 1062 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1062 1266 (face sh-heredoc fontified t) 1266 1269 (fontified t) 1269 1270 (syntax-table (15) fontified t) 1270 1271 (fontified t) 1271 1315 (face font-lock-comment-face fontified t) 1315 1316 (fontified t) 1316 1319 (face font-lock-function-name-face fontified t) 1319 1323 (fontified t) 1323 1332 (face font-lock-variable-name-face fontified t) 1332 1343 (fontified t) 1343 1346 (face sh-heredoc fontified t) 1346 1347 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1347 1483 (face sh-heredoc fontified t) 1483 1486 (fontified t) 1486 1487 (syntax-table (15) fontified t) 1487 1492 (face font-lock-function-name-face fontified t) 1492 1497 (fontified t) 1497 1500 (face font-lock-variable-name-face fontified t) 1500 1506 (face font-lock-variable-name-face fontified t) 1506 1514 (fontified t) 1626 1627 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 2618 2619 (syntax-table (15)) 2793 2794 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 3121 3190 (face sh-heredoc fontified t) 3190 3263 (face sh-heredoc fontified t) 3263 3266 (fontified t) 3266 3267 (fontified t syntax-table (15)) 3267 3272 (face font-lock-function-name-face fontified t) 3272 3277 (fontified t) 3277 3286 (face font-lock-variable-name-face fontified t) 3286 3318 (fontified t) 3318 3343 (face font-lock-comment-face fontified t) 3343 3344 (fontified t) 3344 3348 (face font-lock-function-name-face fontified t) 3348 3349 (fontified t) 3349 3393 (face font-lock-string-face fontified t) 3393 3394 (fontified t) 3394 3396 (face font-lock-keyword-face fontified t) 3396 3402 (fontified t) 3402 3460 (face font-lock-string-face fontified t) 3460 3464 (fontified t) 3464 3468 (face font-lock-keyword-face fontified t) 3468 3471 (fontified t) 3471 3475 (face font-lock-function-name-face fontified t) 3475 3476 (fontified t) 3476 3569 (face font-lock-string-face fontified t) 3569 3570 (fontified t) 3570 3574 (face font-lock-keyword-face fontified t) 3574 3577 (fontified t) 3577 3581 (face font-lock-function-name-face fontified t) 3581 3582 (fontified t) 3582 3657 (face font-lock-string-face fontified t) 3657 3660 (fontified t) 3660 3664 (face font-lock-function-name-face fontified t) 3664 3665 (fontified t) 3665 3744 (face font-lock-string-face fontified t) 3744 3747 (fontified t) 3747 3751 (face font-lock-function-name-face fontified t) 3751 3752 (fontified t) 3752 3791 (face font-lock-string-face fontified t) 3791 3798 (fontified t) 3798 3804 (face font-lock-string-face fontified t) 3804 3815 (fontified t) 3815 3819 (face font-lock-keyword-face fontified t) 3819 3822 (fontified t) 3822 3824 (face font-lock-keyword-face fontified t) 3824 3826 (fontified t) 3826 3830 (face font-lock-function-name-face fontified t) 3830 3831 (fontified t) 3831 3874 (face font-lock-string-face fontified t) 3874 3875 (face font-lock-string-face fontified t rear-nonsticky t) 3875 3876 (fontified t)) . 1) (undo-tree-id3 . -3876) (undo-tree-id4 . -3875) (t 26617 11799 85012 145000)) nil (26617 12825 146762 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3727 . 3728) (nil fontified nil 1 . 3728) (1 . 3728)) nil (26617 12825 146751 686000) 0 nil])
([nil nil ((3728 . 3729)) nil (26617 12825 146745 51000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install

# Copy the library to a location in the standard library search path
echo \"-----> Installing libproxychains4.so to standard library locations\"
mkdir -p $BUILD_DIR/lib
cp $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so $BUILD_DIR/lib/

# Also copy to the app directory where the application will look
mkdir -p $BUILD_DIR/_build/prod/lib/yt_audio_extractor/priv/lib
cp $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so $BUILD_DIR/_build/prod/lib/yt_audio_extractor/priv/lib/

# Create a .so in the standard library path that points to the actual .so
cat > $BUILD_DIR/.profile.d/001_proxychains_symlinks.sh << 'EOF'
#!/usr/bin/env bash
# Create symbolic links to the library in standard locations
mkdir -p $HOME/lib
ln -sf $HOME/.gigalixir/proxychains/lib/libproxychains4.so $HOME/lib/libproxychains4.so

# Also link in the application directory
mkdir -p $HOME/_build/prod/lib/yt_audio_extractor/priv/lib
ln -sf $HOME/.gigalixir/proxychains/lib/libproxychains4.so $HOME/_build/prod/lib/yt_audio_extractor/priv/lib/libproxychains4.so

# Add these directories to LD_LIBRARY_PATH
export LD_LIBRARY_PATH=\"$HOME/lib:$HOME/_build/prod/lib/yt_audio_extractor/priv/lib:$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/.profile.d/001_proxychains_symlinks.sh

# Create an export file for other buildpacks
cat > $BUILD_DIR/export << EOF
export PATH=\"\\$HOME/.gigalixir/proxychains/bin:\\$PATH\"
export LD_LIBRARY_PATH=\"\\$HOME/lib:\\$HOME/_build/prod/lib/yt_audio_extractor/priv/lib:\\$HOME/.gigalixir/proxychains/lib:\\${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/export

# Create a modified proxychains4 wrapper script
cat > $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper << 'EOF'
#!/usr/bin/env bash
# Set library path to include all possible locations
export LD_LIBRARY_PATH=\"$HOME/lib:$HOME/_build/prod/lib/yt_audio_extractor/priv/lib:$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"

# Run proxychains with all arguments passed through
exec \"$HOME/.gigalixir/proxychains/bin/proxychains4\" \"$@\"
EOF
chmod +x $BUILD_DIR/.gigalixir/proxychains/bin/proxychains-wrapper

# Create .profile.d script for runtime environment
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Set up paths at startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/lib:$HOME/_build/prod/lib/yt_audio_extractor/priv/lib:$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"

# Print diagnostic info to app log at startup
echo \"Proxychains4 environment initialized\"
echo \"  - Library paths: $LD_LIBRARY_PATH\"
echo \"  - Executable: $HOME/.gigalixir/proxychains/bin/proxychains4\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

echo \"-----> proxychains4 installation completed\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 960 (fontified t) 960 1028 (face font-lock-comment-face fontified t) 1028 1029 (fontified t) 1029 1033 (face font-lock-function-name-face fontified t) 1033 1034 (fontified t) 1034 1102 (face font-lock-string-face fontified t) 1102 1103 (fontified t) 1103 1108 (face font-lock-function-name-face fontified t) 1108 1113 (fontified t) 1113 1122 (face font-lock-variable-name-face fontified t) 1122 1127 (fontified t) 1127 1129 (face font-lock-function-name-face fontified t) 1129 1131 (fontified t) 1131 1140 (face font-lock-variable-name-face fontified t) 1140 1188 (fontified t) 1188 1197 (face font-lock-variable-name-face fontified t) 1197 1204 (fontified t) 1204 1268 (face font-lock-comment-face fontified t) 1268 1269 (fontified t) 1269 1274 (face font-lock-function-name-face fontified t) 1274 1279 (fontified t) 1279 1288 (face font-lock-variable-name-face fontified t) 1288 1333 (fontified t) 1333 1335 (face font-lock-function-name-face fontified t) 1335 1337 (fontified t) 1337 1346 (face font-lock-variable-name-face fontified t) 1346 1394 (fontified t) 1394 1403 (face font-lock-variable-name-face fontified t) 1403 1450 (fontified t) 1450 1500 (face font-lock-comment-face fontified t) 1500 1523 (face font-lock-comment-face fontified t) 1523 1524 (fontified t) 1588 1589 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 2192 2193 (syntax-table (15)) 2328 2329 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 2530 2531 (syntax-table (15)) 2679 2680 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 3006 3007 (syntax-table (15)) 3074 3075 (fontified t) 3075 3125 (face font-lock-comment-face fontified t) 3125 3126 (fontified t) 3126 3129 (face font-lock-function-name-face fontified t) 3129 3133 (fontified t) 3133 3142 (face font-lock-variable-name-face fontified t) 3142 3176 (fontified t) 3176 3181 (face sh-heredoc fontified t) 3181 3182 (fontified t syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t))) 3182 3623 (face sh-heredoc fontified t) 3623 3626 (fontified t) 3626 3627 (fontified t syntax-table (15)) 3627 3632 (face font-lock-function-name-face fontified t) 3632 3637 (fontified t) 3637 3646 (face font-lock-variable-name-face fontified t) 3646 3678 (fontified t) 3678 3682 (face font-lock-function-name-face fontified t) 3682 3683 (fontified t) 3683 3726 (face font-lock-string-face fontified t) 3726 3727 (face font-lock-string-face fontified t rear-nonsticky t) 3727 3728 (fontified t)) . 1) (undo-tree-id5 . -3728) (undo-tree-id6 . -3727) (t 26617 12825 147309 900000)) nil (26617 13309 183587 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2886 . 2887) (nil fontified nil 1 . 2887) (1 . 2887)) nil (26617 13309 183576 884000) 0 nil])
([nil nil ((2887 . 2888)) nil (26617 13309 183571 957000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4 with a hardcoded library path
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4 with hardcoded library path\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi

# Go to source directory
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"

# Modify the source code to hardcode the library path
echo \"-----> Patching proxychains source to use hardcoded library path\"
LIBPATH=\"/app/.gigalixir/proxychains/lib/libproxychains4.so\"
cat > src.patch << EOF
--- src/main.c.orig
+++ src/main.c
@@ -30,6 +30,7 @@
 	char *path = NULL;
 	char buf[PATH_MAX];
 	
+	return \"/app/.gigalixir/proxychains/lib/libproxychains4.so\";
 	/* try to get if from user's env */
 	path = getenv(LIB_NAME_VAR);
 	if(path && path[0] == '/') return path;
EOF

# Apply the patch
patch -p0 < src.patch

# Build with the patched source
echo \"-----> Building proxychains4 with hardcoded library path\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install

# Create an export file for other buildpacks
cat > $BUILD_DIR/export << EOF
export PATH=\"\\$HOME/.gigalixir/proxychains/bin:\\$PATH\"
export LD_LIBRARY_PATH=\"\\$HOME/.gigalixir/proxychains/lib:\\${LD_LIBRARY_PATH:-}\"
EOF
chmod +x $BUILD_DIR/export

# Create .profile.d script for runtime environment
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Set up paths at startup
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"

# Print diagnostic info to app log at startup
echo \"Proxychains4 environment initialized with hardcoded library path\"
echo \"  - Library path: $HOME/.gigalixir/proxychains/lib\"
echo \"  - Executable: $HOME/.gigalixir/proxychains/bin/proxychains4\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Verify the installation
echo \"-----> Verifying proxychains4 installation\"
if [ -f \"$BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\" ]; then
  echo \"-----> libproxychains4.so found at $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so\"
else
  echo \"-----> ERROR: libproxychains4.so not found! Installation may have failed.\"
  exit 1
fi

echo \"-----> proxychains4 installation completed with hardcoded library path\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 85 (face font-lock-comment-face fontified t) 85 86 (fontified t) 86 98 (face font-lock-comment-face fontified t) 98 99 (fontified t) 99 108 (face font-lock-variable-name-face fontified t) 108 110 (fontified t) 110 111 (face font-lock-variable-name-face fontified t) 111 112 (fontified t) 112 121 (face font-lock-variable-name-face fontified t) 121 123 (fontified t) 123 124 (face font-lock-variable-name-face fontified t) 124 125 (fontified t) 125 132 (face font-lock-variable-name-face fontified t) 132 134 (fontified t) 134 135 (face font-lock-variable-name-face fontified t) 135 136 (fontified t) 136 140 (face font-lock-function-name-face fontified t) 140 141 (fontified t) 141 201 (face font-lock-string-face fontified t) 201 202 (fontified t) 202 248 (face font-lock-comment-face fontified t) 248 249 (fontified t) 249 254 (face font-lock-function-name-face fontified t) 254 259 (fontified t) 259 268 (face font-lock-variable-name-face fontified t) 268 292 (fontified t) 292 297 (face font-lock-function-name-face fontified t) 297 302 (fontified t) 302 311 (face font-lock-variable-name-face fontified t) 311 324 (fontified t) 324 329 (face font-lock-function-name-face fontified t) 329 334 (fontified t) 334 343 (face font-lock-variable-name-face fontified t) 343 355 (fontified t) 355 406 (face font-lock-comment-face fontified t) 406 407 (fontified t) 407 426 (face font-lock-variable-name-face fontified t) 426 427 (fontified t) 427 433 (face font-lock-string-face fontified t) 433 434 (fontified t) 434 449 (face font-lock-variable-name-face fontified t) 449 450 (fontified t) 450 513 (face font-lock-string-face fontified t) 513 532 (face font-lock-variable-use-face fontified t) 532 541 (face font-lock-string-face fontified t) 541 542 (fontified t) 542 564 (face font-lock-comment-face fontified t) 564 565 (fontified t) 565 567 (face font-lock-function-name-face fontified t) 567 569 (fontified t) 569 578 (face font-lock-variable-name-face fontified t) 578 591 (fontified t) 591 593 (face font-lock-keyword-face fontified t) 593 601 (fontified t) 601 616 (face font-lock-string-face fontified t) 616 635 (face font-lock-variable-use-face fontified t) 635 644 (face font-lock-string-face fontified t) 644 648 (fontified t) 648 652 (face font-lock-keyword-face fontified t) 652 655 (fontified t) 655 659 (face font-lock-function-name-face fontified t) 659 660 (fontified t) 660 698 (face font-lock-string-face fontified t) 698 717 (face font-lock-variable-use-face fontified t) 717 719 (face font-lock-string-face fontified t) 719 722 (fontified t) 722 726 (face font-lock-function-name-face fontified t) 726 731 (fontified t) 731 734 (face font-lock-string-face fontified t) 734 749 (face font-lock-variable-use-face fontified t) 749 751 (face font-lock-string-face fontified t) 751 755 (fontified t) 755 770 (face font-lock-string-face fontified t) 770 789 (face font-lock-variable-use-face fontified t) 789 798 (face font-lock-string-face fontified t) 798 801 (fontified t) 801 804 (face font-lock-function-name-face fontified t) 804 810 (fontified t) 810 825 (face font-lock-string-face fontified t) 825 844 (face font-lock-variable-use-face fontified t) 844 853 (face font-lock-string-face fontified t) 853 854 (fontified t) 854 856 (face font-lock-keyword-face fontified t) 856 858 (fontified t) 858 882 (face font-lock-comment-face fontified t) 882 883 (fontified t) 883 885 (face font-lock-function-name-face fontified t) 885 886 (fontified t) 886 904 (face font-lock-string-face fontified t) 904 923 (face font-lock-variable-use-face fontified t) 923 925 (face font-lock-string-face fontified t) 925 927 (fontified t) 927 980 (face font-lock-comment-face fontified t) 980 981 (fontified t) 981 985 (face font-lock-function-name-face fontified t) 985 986 (fontified t) 986 1052 (face font-lock-string-face fontified t) 1052 1053 (fontified t) 1053 1060 (face font-lock-variable-name-face fontified t) 1060 1061 (fontified t) 1061 1113 (face font-lock-string-face fontified t) 1113 1114 (fontified t) 1114 1117 (face font-lock-function-name-face fontified t) 1117 1133 (fontified t) 1133 1136 (face sh-heredoc fontified t) 1136 1137 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1137 1410 (face sh-heredoc fontified t) 1410 1413 (fontified t) 1413 1414 (syntax-table (15) fontified t) 1414 1415 (fontified t) 1415 1432 (face font-lock-comment-face fontified t) 1432 1433 (fontified t) 1433 1438 (face font-lock-function-name-face fontified t) 1438 1456 (fontified t) 1456 1487 (face font-lock-comment-face fontified t) 1487 1488 (fontified t) 1488 1492 (face font-lock-function-name-face fontified t) 1492 1493 (fontified t) 1493 1500 (face font-lock-string-face fontified t) 1500 1551 (face font-lock-string-face fontified t) 1551 1552 (fontified t) 1552 1563 (face font-lock-function-name-face fontified t) 1563 1574 (fontified t) 1574 1583 (face font-lock-variable-name-face fontified t) 1583 1607 (fontified t) 1607 1611 (face font-lock-function-name-face fontified t) 1611 1612 (fontified t) 1612 1616 (face font-lock-function-name-face fontified t) 1616 1626 (fontified t) 1626 1670 (face font-lock-comment-face fontified t) 1670 1671 (fontified t) 1671 1674 (face font-lock-function-name-face fontified t) 1674 1678 (fontified t) 1678 1687 (face font-lock-variable-name-face fontified t) 1687 1698 (fontified t) 1698 1701 (face sh-heredoc fontified t) 1701 1702 (fontified t syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 1702 1838 (face sh-heredoc fontified t) 1838 1841 (fontified t) 1841 1842 (fontified t syntax-table (15)) 1842 1847 (face font-lock-function-name-face fontified t) 1847 1852 (fontified t) 1852 1861 (face font-lock-variable-name-face fontified t) 1861 1870 (fontified t) 1870 1920 (face font-lock-comment-face fontified t) 1920 1921 (fontified t) 1921 1924 (face font-lock-function-name-face fontified t) 1924 1928 (fontified t) 1928 1937 (face font-lock-variable-name-face fontified t) 1937 1971 (fontified t) 1971 1976 (face sh-heredoc fontified t) 1976 1977 (fontified t syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 1977 2155 (face sh-heredoc fontified t) 2155 2156 (face sh-heredoc fontified t) 2156 2202 (face sh-heredoc fontified t) 2202 2401 (face sh-heredoc fontified t) 2401 2404 (fontified t) 2404 2405 (fontified t syntax-table (15)) 2405 2410 (face font-lock-function-name-face fontified t) 2410 2415 (fontified t) 2415 2424 (face font-lock-variable-name-face fontified t) 2424 2456 (fontified t) 2456 2481 (face font-lock-comment-face fontified t) 2481 2482 (fontified t) 2482 2486 (face font-lock-function-name-face fontified t) 2486 2487 (fontified t) 2487 2531 (face font-lock-string-face fontified t) 2531 2532 (fontified t) 2532 2534 (face font-lock-keyword-face fontified t) 2534 2540 (fontified t) 2540 2598 (face font-lock-string-face fontified t) 2598 2602 (fontified t) 2602 2606 (face font-lock-keyword-face fontified t) 2606 2609 (fontified t) 2609 2613 (face font-lock-function-name-face fontified t) 2613 2614 (fontified t) 2614 2707 (face font-lock-string-face fontified t) 2707 2708 (fontified t) 2708 2712 (face font-lock-keyword-face fontified t) 2712 2715 (fontified t) 2715 2719 (face font-lock-function-name-face fontified t) 2719 2720 (fontified t) 2720 2795 (face font-lock-string-face fontified t) 2795 2798 (fontified t) 2798 2802 (face font-lock-keyword-face fontified t) 2802 2805 (fontified t) 2805 2807 (face font-lock-keyword-face fontified t) 2807 2809 (fontified t) 2809 2813 (face font-lock-function-name-face fontified t) 2813 2814 (fontified t) 2814 2885 (face font-lock-string-face fontified t) 2885 2886 (face font-lock-string-face fontified t rear-nonsticky t) 2886 2887 (fontified t)) . 1) (undo-tree-id7 . -2887) (undo-tree-id8 . -57) (undo-tree-id9 . -57) (undo-tree-id10 . -57) (undo-tree-id11 . -20) (undo-tree-id12 . -57) (t 26617 13309 183907 494000)) nil (26617 14089 44110 326000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4104 . 4105) (nil fontified nil 1 . 4105) (1 . 4105)) nil (26617 14089 44099 265000) 0 nil])
([nil nil ((4105 . 4106)) nil (26617 14089 44094 245000) 0 nil])
([nil nil ((#("#!/usr/bin/env bash
# This script installs proxychains4
# Parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
echo \"-----> Installing proxychains4\"
# Create directories for Gigalixir environment
mkdir -p $BUILD_DIR/.gigalixir/proxychains
mkdir -p $CACHE_DIR/proxychains
mkdir -p $BUILD_DIR/.profile.d
# Define the download url for proxychains-ng source
PROXYCHAINS_VERSION=\"4.15\"
PROXYCHAINS_URL=\"https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v${PROXYCHAINS_VERSION}.tar.gz\"
# Download and extract
cd $CACHE_DIR/proxychains
if [ ! -f \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\" ]; then
  echo \"-----> Downloading proxychains-ng v${PROXYCHAINS_VERSION}\"
  curl -sL \"${PROXYCHAINS_URL}\" -o \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
  tar -xzf \"proxychains-${PROXYCHAINS_VERSION}.tar.gz\"
fi
# Build
cd \"proxychains-ng-${PROXYCHAINS_VERSION}\"
echo \"-----> Building proxychains4\"
./configure --prefix=$BUILD_DIR/.gigalixir/proxychains
make
make install

# Create the library symlink structure
echo \"-----> Setting up library symlinks\"
mkdir -p $BUILD_DIR/usr/lib
# Create copies and symlinks of the library in multiple locations
cp $BUILD_DIR/.gigalixir/proxychains/lib/libproxychains4.so $BUILD_DIR/usr/lib/
ln -sf $BUILD_DIR/usr/lib/libproxychains4.so $BUILD_DIR/usr/lib/libproxychains.so

# Create .profile.d script for runtime environment
cat > $BUILD_DIR/.profile.d/000_proxychains.sh << 'EOF'
#!/usr/bin/env bash
# Create system-wide library symlinks at runtime
mkdir -p /usr/lib
cp $HOME/.gigalixir/proxychains/lib/libproxychains4.so /usr/lib/ 2>/dev/null || true
ln -sf /usr/lib/libproxychains4.so /usr/lib/libproxychains.so 2>/dev/null || true

# Set up path and library path
export PATH=\"$HOME/.gigalixir/proxychains/bin:$PATH\"
export LD_LIBRARY_PATH=\"/usr/lib:$HOME/.gigalixir/proxychains/lib:${LD_LIBRARY_PATH:-}\"

# Create a simple proxychains shell script that uses LD_PRELOAD directly
mkdir -p $HOME/bin
cat > $HOME/bin/proxychains-direct << 'SCRIPT'
#!/usr/bin/env bash
# Parse arguments to find -f config file
config=\"\"
args=()
i=0
while [ $i -lt $# ]; do
  arg=\"${!i}\"
  if [ \"$arg\" = \"-f\" ]; then
    i=$((i+1))
    config=\"${!i}\"
  else
    args+=(\"$arg\")
  fi
  i=$((i+1))
done

# Use default config if none specified
if [ -z \"$config\" ]; then
  if [ -f \"/app/_build/prod/lib/yt_audio_extractor/priv/proxychains.conf\" ]; then
    config=\"/app/_build/prod/lib/yt_audio_extractor/priv/proxychains.conf\"
  elif [ -f \"/app/proxychains.conf\" ]; then
    config=\"/app/proxychains.conf\"
  else
    echo \"ERROR: No proxychains configuration file specified and none found\"
    exit 1
  fi
fi

# Export proxychains config environment variable
export PROXYCHAINS_CONF_FILE=\"$config\"

# Run the command with LD_PRELOAD
LD_PRELOAD=/usr/lib/libproxychains.so \"${args[@]}\"
SCRIPT
chmod +x $HOME/bin/proxychains-direct

echo \"Proxychains4 environment initialized with library symlinks\"
echo \"Library locations: /usr/lib/libproxychains.so, $HOME/.gigalixir/proxychains/lib/libproxychains4.so\"
EOF
chmod +x $BUILD_DIR/.profile.d/000_proxychains.sh

# Create a directory for runtime scripts
mkdir -p $BUILD_DIR/bin
cat > $BUILD_DIR/bin/proxychains-direct << 'EOF'
#!/usr/bin/env bash
# Parse arguments to find -f config file
config=\"\"
args=()
i=1
while [ $i -le $# ]; do
  arg=\"${!i}\"
  if [ \"$arg\" = \"-f\" ]; then
    i=$((i+1))
    config=\"${!i}\"
  else
    args+=(\"$arg\")
  fi
  i=$((i+1))
done

# Use default config if none specified
if [ -z \"$config\" ]; then
  if [ -f \"/app/_build/prod/lib/yt_audio_extractor/priv/proxychains.conf\" ]; then
    config=\"/app/_build/prod/lib/yt_audio_extractor/priv/proxychains.conf\"
  elif [ -f \"/app/proxychains.conf\" ]; then
    config=\"/app/proxychains.conf\"
  else
    echo \"ERROR: No proxychains configuration file specified and none found\"
    exit 1
  fi
fi

# Export proxychains config environment variable
export PROXYCHAINS_CONF_FILE=\"$config\"

# Run the command with LD_PRELOAD
LD_PRELOAD=/usr/lib/libproxychains.so \"${args[@]}\"
EOF
chmod +x $BUILD_DIR/bin/proxychains-direct

echo \"-----> proxychains4 installation completed with library symlinks\"
" 0 19 (face font-lock-comment-face fontified t) 19 20 (fontified t) 20 55 (face font-lock-comment-face fontified t) 55 56 (fontified t) 56 68 (face font-lock-comment-face fontified t) 68 69 (fontified t) 69 78 (face font-lock-variable-name-face fontified t) 78 80 (fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (fontified t) 82 91 (face font-lock-variable-name-face fontified t) 91 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 102 (face font-lock-variable-name-face fontified t) 102 104 (fontified t) 104 105 (face font-lock-variable-name-face fontified t) 105 106 (fontified t) 106 110 (face font-lock-function-name-face fontified t) 110 111 (fontified t) 111 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 190 (face font-lock-comment-face fontified t) 190 191 (fontified t) 191 196 (face font-lock-function-name-face fontified t) 196 201 (fontified t) 201 210 (face font-lock-variable-name-face fontified t) 210 234 (fontified t) 234 239 (face font-lock-function-name-face fontified t) 239 244 (fontified t) 244 253 (face font-lock-variable-name-face fontified t) 253 266 (fontified t) 266 271 (face font-lock-function-name-face fontified t) 271 276 (fontified t) 276 285 (face font-lock-variable-name-face fontified t) 285 297 (fontified t) 297 348 (face font-lock-comment-face fontified t) 348 349 (fontified t) 349 368 (face font-lock-variable-name-face fontified t) 368 369 (fontified t) 369 375 (face font-lock-string-face fontified t) 375 376 (fontified t) 376 391 (face font-lock-variable-name-face fontified t) 391 392 (fontified t) 392 455 (face font-lock-string-face fontified t) 455 474 (face font-lock-variable-use-face fontified t) 474 483 (face font-lock-string-face fontified t) 483 484 (fontified t) 484 506 (face font-lock-comment-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-function-name-face fontified t) 509 511 (fontified t) 511 520 (face font-lock-variable-name-face fontified t) 520 533 (fontified t) 533 535 (face font-lock-keyword-face fontified t) 535 543 (fontified t) 543 558 (face font-lock-string-face fontified t) 558 577 (face font-lock-variable-use-face fontified t) 577 586 (face font-lock-string-face fontified t) 586 590 (fontified t) 590 594 (face font-lock-keyword-face fontified t) 594 597 (fontified t) 597 601 (face font-lock-function-name-face fontified t) 601 602 (fontified t) 602 640 (face font-lock-string-face fontified t) 640 659 (face font-lock-variable-use-face fontified t) 659 661 (face font-lock-string-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-function-name-face fontified t) 668 673 (fontified t) 673 676 (face font-lock-string-face fontified t) 676 691 (face font-lock-variable-use-face fontified t) 691 693 (face font-lock-string-face fontified t) 693 697 (fontified t) 697 712 (face font-lock-string-face fontified t) 712 731 (face font-lock-variable-use-face fontified t) 731 740 (face font-lock-string-face fontified t) 740 743 (fontified t) 743 746 (face font-lock-function-name-face fontified t) 746 752 (fontified t) 752 767 (face font-lock-string-face fontified t) 767 786 (face font-lock-variable-use-face fontified t) 786 795 (face font-lock-string-face fontified t) 795 796 (fontified t) 796 798 (face font-lock-keyword-face fontified t) 798 799 (fontified t) 799 806 (face font-lock-comment-face fontified t) 806 807 (fontified t) 807 809 (face font-lock-function-name-face fontified t) 809 810 (fontified t) 810 828 (face font-lock-string-face fontified t) 828 847 (face font-lock-variable-use-face fontified t) 847 849 (face font-lock-string-face fontified t) 849 850 (fontified t) 850 854 (face font-lock-function-name-face fontified t) 854 855 (fontified t) 855 885 (face font-lock-string-face fontified t) 885 886 (fontified t) 886 897 (face font-lock-function-name-face fontified t) 897 908 (fontified t) 908 917 (face font-lock-variable-name-face fontified t) 917 941 (fontified t) 941 945 (face font-lock-function-name-face fontified t) 945 946 (fontified t) 946 950 (face font-lock-function-name-face fontified t) 950 960 (fontified t) 960 998 (face font-lock-comment-face fontified t) 998 999 (fontified t) 999 1003 (face font-lock-function-name-face fontified t) 1003 1004 (fontified t) 1004 1040 (face font-lock-string-face fontified t) 1040 1041 (fontified t) 1041 1046 (face font-lock-function-name-face fontified t) 1046 1051 (fontified t) 1051 1060 (face font-lock-variable-name-face fontified t) 1060 1069 (fontified t) 1069 1134 (face font-lock-comment-face fontified t) 1134 1135 (fontified t) 1135 1137 (face font-lock-function-name-face fontified t) 1137 1139 (fontified t) 1139 1148 (face font-lock-variable-name-face fontified t) 1148 1196 (fontified t) 1196 1205 (face font-lock-variable-name-face fontified t) 1205 1215 (fontified t) 1215 1217 (face font-lock-function-name-face fontified t) 1217 1223 (fontified t) 1223 1232 (face font-lock-variable-name-face fontified t) 1232 1261 (fontified t) 1261 1270 (face font-lock-variable-name-face fontified t) 1270 1298 (fontified t) 1298 1348 (face font-lock-comment-face fontified t) 1348 1349 (fontified t) 1349 1352 (face font-lock-function-name-face fontified t) 1352 1356 (fontified t) 1356 1365 (face font-lock-variable-name-face fontified t) 1365 1399 (fontified t) 1399 1404 (face sh-heredoc fontified t) 1404 1405 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (face sh-heredoc fontified t)) fontified t) 1405 1500 (face sh-heredoc fontified t) 1500 1577 (face sh-heredoc fontified t) 3006 3007 (syntax-table (15)) 3171 3172 (syntax-table (15) sh-here-doc-marker #("EOF" 0 3 (fontified nil))) 3628 3672 (face sh-heredoc fontified t) 3672 3985 (face sh-heredoc fontified t) 3985 3988 (fontified t) 3988 3989 (fontified t syntax-table (15)) 3989 3994 (face font-lock-function-name-face fontified t) 3994 3999 (fontified t) 3999 4008 (face font-lock-variable-name-face fontified t) 4008 4033 (fontified t) 4033 4037 (face font-lock-function-name-face fontified t) 4037 4038 (fontified t) 4038 4103 (face font-lock-string-face fontified t) 4103 4104 (face font-lock-string-face fontified t rear-nonsticky t) 4104 4105 (fontified t)) . 1) (undo-tree-id13 . -4105) (undo-tree-id14 . -4104) (t 26617 14089 45107 840000)) nil (26617 15774 383275 603000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3119 . 3120) (nil fontified nil 1 . 3120) (1 . 3120)) nil (26617 15774 383267 98000) 0 nil])
([nil current ((3120 . 3121)) nil (26617 15774 383260 948000) 0 nil])
nil
